version: '3.3'
services:
  broker:
    image: confluentinc/cp-server:5.5.0
    environment:
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: '1'
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://192.168.2.33:9092
      KAFKA_BROKER_ID: '1'
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092:9092
      - 29092:29092
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  connect:
    image: cnfldemos/cp-server-connect-datagen:0.3.2-5.5.0
    environment:
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.5.0.jar
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: '10000'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: '8083'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 8083:8083
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  control-center:
    image: confluentinc/cp-enterprise-control-center:5.5.0
    environment:
      CONFLUENT_METRICS_TOPIC_REPLICATION: '1'
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:29092
      CONTROL_CENTER_CONNECT_CLUSTER: connect:8083
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: '1'
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://192.168.2.33:8088
      CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb-server:8088
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: '1'
      CONTROL_CENTER_REPLICATION_FACTOR: '1'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      PORT: '9021'
    ports:
      - 9021:9021
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  ksql-datagen:
    image: confluentinc/ksqldb-examples:5.5.0
    command:
      - bash
      - -c
      - echo Waiting for Kafka to be ready... && cub kafka-ready -b broker:29092 1
        40 && echo Waiting for Confluent Schema Registry to be ready... && cub sr-ready
        schema-registry 8081 40 && echo Waiting a few seconds for topic creation to
        finish... && sleep 11 && tail -f /dev/null
    environment:
      KSQL_CONFIG_DIR: /etc/ksql
      STREAMS_BOOTSTRAP_SERVERS: broker:29092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: '8081'
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:5.5.0
    tty: true
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:5.5.0
    environment:
      KSQL_BOOTSTRAP_SERVERS: broker:29092
      KSQL_CACHE_MAX_BYTES_BUFFERING: '0'
      KSQL_CONFIG_DIR: /etc/ksql
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      KSQL_HOST_NAME: ksqldb-server
      KSQL_KSQL_CONNECT_URL: http://connect:8083
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    ports:
      - 8088:8088
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.0
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - 8082:8082
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
    ports:
      - 8081:8081
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
    ports:
      - 2181:2181
    networks:
      - confluent-platform
    logging:
      driver: json-file
    #deploy:
      #placement:
        #constraints:
          #- node.labels.worker == master
networks:
  confluent-platform:
    external: true
